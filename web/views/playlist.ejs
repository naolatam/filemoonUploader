<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Liste des Playlists</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-white">

    <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold mb-4">Playlists Créées</h1>

        <!-- Liste des playlists -->
        <div id="playlists" class="space-y-4">
            <!-- Les playlists seront insérées ici -->
        </div>
    </div>

    <script>
        async function fetchPlaylists() {
            try {
                const response = await fetch('/playlist/all');
                const playlists = await response.json();

                // Sélectionner l'élément où les playlists seront affichées
                const playlistsContainer = document.getElementById('playlists');
                
                // Vérifier si la réponse contient des playlists
                if (Array.isArray(playlists) && playlists.length > 0) {
                    playlists.forEach(playlist => {
                        const playlistElement = document.createElement('div');
                        playlistElement.classList.add('bg-gray-800', 'p-4', 'rounded-lg', 'shadow-md');

                        // Titre de la playlist
                        playlistElement.innerHTML = `
                            <h2 class="text-xl font-semibold mb-2">${playlist.name}</h2>
                            <p>Ordre: ${playlist.order}</p>
                            <p>Supprimer après envoi: ${playlist.deleteAfter ? 'Oui' : 'Non'}</p>
                            <p class="mt-2 text-gray-400">UUID: ${playlist.uuid}</p>
                            
                            <h3 class="mt-4 text-lg font-semibold">Fichiers Envoyés:</h3>
                            <ul class="list-disc pl-6">
                                ${playlist.uploaded.length > 0 ? playlist.uploaded.map(file => {
                                    return `<li>${file.maskedPath}</li>`;
                                }).join('') : '<li class="text-gray-400">Aucun fichier envoyé</li>'}
                            </ul>

                            <h3 class="mt-4 text-lg font-semibold">Fichiers En Attente d\'Envoi:</h3>
                            <ul class="list-disc pl-6">
                                ${playlist.pendingUpload.length > 0 ? playlist.pendingUpload.map(file => {
                                    return `<li>${file.maskedPath}</li>`;
                                }).join('') : '<li class="text-gray-400">Aucun fichier en attente</li>'}
                            </ul>
                        `;

                        // Ajouter la playlist au conteneur
                        playlistsContainer.appendChild(playlistElement);
                    });
                } else {
                    playlistsContainer.innerHTML = '<p class="text-gray-400">Aucune playlist trouvée.</p>';
                }
            } catch (error) {
                console.error('Erreur lors de la récupération des playlists:', error);
                document.getElementById('playlists').innerHTML = '<p class="text-red-500">Erreur lors de la récupération des données.</p>';
            }
        }

        // Appeler la fonction de récupération des playlists
        fetchPlaylists();
    </script>

</body>
</html>
